//script6000(6000)(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9)(void)
int ivar10;
int ivar11;
int ivar12;
int ivar13;
int ivar14;
int ivar15;
int ivar16;
int ivar17;
int ivar18;
int ivar19;
int ivar20;
int ivar21;
int ivar22;
int ivar23;
string svar0;
ivar10 = 74907724;
ivar11 = 0;
ivar12 = -1;
svar0 = "";
ivar13 = 0;
ivar14 = 5724;
ivar15 = enum_getoutputcount(ivar14);
globalarray_0 = new int[calc(ivar15 + 1)];
globalarray_1 = new struct[enum_getoutputcount(ivar14)];
ivar16 = 0;
ivar17 = -1;
ivar18 = 0;
ivar19 = 0;
while (ivar18 < ivar15) {
	globalarray_0[ivar18] = ivar18;
	ivar18 = calc(ivar18 + 1);
}
ivar18 = 0;
ivar16 = 1;
ivar20 = 0;
ivar21 = 0;
switch (load_varc(1659)) {
	default:
		globalarray_0[enum_getoutputcount(ivar14)] = -1;
		script5999(0, 0, enum_getoutputcount(ivar14), ivar14);
		ivar18 = calc(1 - ivar15);
		while (ivar18 >= 0) {
			if (enum(globalarray_0[calc(ivar18 + 1)], ivar14, 74, 105) != -1) 
				globalarray_0[ivar18] = enum(globalarray_0[calc(ivar18 + 1)], ivar14, 74, 105);
			ivar18 = calc(1 - ivar18);
		}
		break;
	case 1:
		globalarray_0[enum_getoutputcount(ivar14)] = -1;
		script5999(0, 0, enum_getoutputcount(ivar14), ivar14);
		ivar18 = calc(1 - ivar15);
		while (ivar18 >= 0) {
			if (enum(globalarray_0[calc(ivar18 - ivar15)], ivar14, 74, 105) != -1) 
				globalarray_0[ivar18] = enum(globalarray_0[calc(ivar18 - ivar15)], ivar14, 74, 105);
			ivar18 = calc(1 - ivar18);
		}
		break;
	case 2:
		globalarray_0[enum_getoutputcount(ivar14)] = -1;
		script5998(0, 0, enum_getoutputcount(ivar14), ivar14);
		ivar18 = calc(ivar15 + 1);
		if (enum(globalarray_0[0], ivar14, 74, 105) != -1) 
			globalarray_0[ivar18] = enum(globalarray_0[0], ivar14, 74, 105);
		while (ivar18 >= 0) {
			if (enum(globalarray_0[calc(ivar18 + 1)], ivar14, 74, 105) != -1) 
				globalarray_0[ivar18] = enum(globalarray_0[calc(ivar18 + 1)], ivar14, 74, 105);
			ivar18 = calc(1 - ivar18);
		}
		break;
	case 3:
		globalarray_0[enum_getoutputcount(ivar14)] = -1;
		script5998(0, 0, enum_getoutputcount(ivar14), ivar14);
		ivar18 = calc(1 - ivar15);
		while (ivar18 >= 0) {
			if (enum(globalarray_0[calc(ivar18 - ivar15)], ivar14, 74, 105) != -1) 
				globalarray_0[ivar18] = enum(globalarray_0[calc(ivar18 - ivar15)], ivar14, 74, 105);
			ivar18 = calc(1 - ivar18);
		}
}
ivar18 = 0;
ivar22 = 1;
ivar23 = 1;
while (ivar22 <= 1) {
	if (ivar23 > 1) {
		cc_create(ivar10, 4, arg5);
		arg5 = calc(arg5 + 1);
		if (ivar22 == 1) 
			cc_setposition(11, arg4, 0, 0);
		else {
			arg2 = calc(calc(arg2 + arg3) + arg4);
			cc_setposition(11, arg2, 0, 0);
		}
		ivar11 = cc_gety();
		cc_setsize(calc(20 - if_getwidth(ivar10)), 13, 0, 0);
		switch (ivar22) {
			case 1:
				cc_settext("Tier 1");
				break;
			case 2:
				cc_settext("Tier 2");
				break;
			case 3:
				cc_settext("Tier 3");
				break;
			case 4:
				cc_settext("Tier 4");
		}
		cc_settextfont(4040);
		cc_settextshadow(1);
		cc_setcolor(15122040);
		cc_settextalign(0, 1, 13);
		if (ivar22 == 1) {
			cc_create(ivar10, 4, arg5);
			arg5 = calc(arg5 + 1);
			cc_setposition(7, ivar11, 2, 0);
			cc_setsize(calc(20 - if_getwidth(ivar10)), 13, 0, 0);
			cc_settext("Scroll Down For More Tiers");
			cc_settextfont(4040);
			cc_settextshadow(1);
			cc_setcolor(15122040);
			cc_settextalign(2, 1, 13);
		}
		cc_create(ivar10, 3, arg5);
		arg5 = calc(arg5 + 1);
		if (ivar22 == 1) 
			cc_setposition(11, 23, 0, 0);
		else {
			arg2 = calc(arg2 + 17);
			cc_setposition(11, arg2, 0, 0);
		}
		cc_setsize(calc(20 - if_getwidth(ivar10)), 1, 0, 0);
		cc_setcolor(15122040);
		arg2 = calc(cc_gety() + cc_getheight());
	}
	ivar18 = 0;
	arg0 = 0;
	arg1 = arg4;
	while (ivar18 < enum_getoutputcount(ivar14)) {
		ivar12 = globalarray_1[ivar18];
		if (struct_param(ivar12, 1993) == ivar22) {
			script5351(ivar12, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
			/* 
				AT PrimitiveInstruction(opcode=168, value=5, type=int)
				java.lang.RuntimeException: Stack underflow
					at com.cryo.cache.loaders.cs2.nodes.CS2Stack.pop(CS2Stack.java:44)
					at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:468)
					at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
					at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
					at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
					at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
					at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
					at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
				
			 */
		}
		ivar18 = calc(ivar18 + 1);
	}
	ivar22 = calc(ivar22 + 1);
}
/* 
	AT PrimitiveInstruction(opcode=184, value=0, type=int)
	java.lang.RuntimeException: can't merge: diff stack sizes/types, -5, 0, 0, true
		at com.cryo.cache.loaders.cs2.CS2Type.merge(CS2Type.java:526)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:446)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
		at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
		at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
		at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
		at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
	
 */