//script1864(1864)(int arg0, int arg1, int arg2, int arg3)(void)
int ivar4;
int stack_dump0;
int stack_dump1;
string stack_dump2;
if (arg0 != 1) 
	return;
switch (arg2) {
	case 12:
		switch (arg3) {
			case 0:
				send_message("Rick: " + to_string(enum(1, 238, 105, 105)) + " coins.");
				break;
			case 1:
				send_message("Maid: " + to_string(enum(3, 238, 105, 105)) + " coins.");
				break;
			case 2:
				send_message("Cook: " + to_string(enum(5, 238, 105, 105)) + " coins.");
				break;
			case 3:
				send_message("Butler: " + to_string(enum(6, 238, 105, 105)) + " coins.");
				break;
			case 4:
				send_message("Demon Butler: " + to_string(enum(8, 238, 105, 105)) + " coins.");
		}
		return;
	case 0:
		switch (arg1) {
			case 8170:
				arg1 = 8415;
				break;
			case 8315:
				arg1 = 8395;
				break;
			case 8222:
				arg1 = 8396;
				break;
			case 8121:
				arg1 = 8397;
				break;
			case 8379:
				arg1 = 8406;
				break;
			case 8037:
				arg1 = 8398;
				break;
			case 8255:
				arg1 = 8401;
				break;
			case 8163:
				arg1 = 8399;
				break;
			case 8027:
				arg1 = 8400;
				break;
			case 8259:
				arg1 = 8403;
				break;
			case 8340:
				arg1 = 8407;
				break;
			case 9822:
				arg1 = 9842;
				break;
			case 8068:
				arg1 = 8405;
				break;
			case 8333:
				arg1 = 8408;
				break;
			case 8195:
				arg1 = 8416;
				break;
			case 8363:
				arg1 = 8409;
				break;
			case 8302:
				arg1 = 8410;
				break;
			case 8123:
				arg1 = 8411;
				break;
			case 8122:
				arg1 = 18800;
				break;
			case 8151:
				arg1 = 8414;
		}
		stack_dump0 = arg1;
		stack_dump1 = item_name(arg1);
		stack_dump2 = ": ";
		/* 
			AT PrimitiveInstruction(opcode=89, value=false, type=boolean)
			com.cryo.utils.cs2.DecompilerException: No documentation for:PrimitiveInstruction(opcode=89, value=false, type=boolean)
				at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:526)
				at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
				at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
				at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
				at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
				at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
				at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
			
		 */
	case 14:
	case 15:
		return;
}
globalarray_0 = new obj[6];
globalarray_1 = new int[6];
ivar4 = 0;
if (item_param(arg1, 211) != -1) {
	globalarray_0[0] = item_param(arg1, 211);
	globalarray_0[0] = item_param(arg1, 212);
	ivar4 = calc(ivar4 + 1);
}
if (item_param(arg1, 213) != -1) {
	globalarray_0[1] = item_param(arg1, 213);
	globalarray_0[1] = item_param(arg1, 214);
	ivar4 = calc(ivar4 + 1);
}
if (item_param(arg1, 215) != -1) {
	globalarray_0[2] = item_param(arg1, 215);
	globalarray_0[2] = item_param(arg1, 216);
	ivar4 = calc(ivar4 + 1);
}
if (item_param(arg1, 217) != -1) {
	globalarray_0[3] = item_param(arg1, 217);
	globalarray_0[3] = item_param(arg1, 218);
	ivar4 = calc(ivar4 + 1);
}
if (item_param(arg1, 219) != -1) {
	globalarray_0[4] = item_param(arg1, 219);
	globalarray_0[4] = item_param(arg1, 220);
	ivar4 = calc(ivar4 + 1);
}
if (item_param(arg1, 221) != -1) {
	globalarray_0[5] = item_param(arg1, 221);
	globalarray_0[5] = item_param(arg1, 222);
	ivar4 = calc(ivar4 + 1);
}
switch (ivar4) {
	case 1:
		send_message(item_name(arg1) + ":");
		send_message(tostring_localized(globalarray_1[0], 1) + " x " + item_name(globalarray_0[0]));
		break;
	case 2:
		send_message(item_name(arg1) + ":");
		send_message(tostring_localized(globalarray_1[0], 1) + " x " + item_name(globalarray_0[0]));
		send_message(tostring_localized(globalarray_1[1], 1) + " x " + item_name(globalarray_0[1]));
		break;
	case 3:
		send_message(item_name(arg1) + ":");
		send_message(tostring_localized(globalarray_1[0], 1) + " x " + item_name(globalarray_0[0]));
		send_message(tostring_localized(globalarray_1[1], 1) + " x " + item_name(globalarray_0[1]));
		send_message(tostring_localized(globalarray_1[2], 1) + " x " + item_name(globalarray_0[2]));
		break;
	case 4:
		send_message(item_name(arg1) + ":");
		send_message(tostring_localized(globalarray_1[0], 1) + " x " + item_name(globalarray_0[0]));
		send_message(tostring_localized(globalarray_1[1], 1) + " x " + item_name(globalarray_0[1]));
		send_message(tostring_localized(globalarray_1[2], 1) + " x " + item_name(globalarray_0[2]));
		send_message(tostring_localized(globalarray_1[3], 1) + " x " + item_name(globalarray_0[3]));
		break;
	case 5:
		send_message(item_name(arg1) + ":");
		send_message(tostring_localized(globalarray_1[0], 1) + " x " + item_name(globalarray_0[0]));
		send_message(tostring_localized(globalarray_1[1], 1) + " x " + item_name(globalarray_0[1]));
		send_message(tostring_localized(globalarray_1[2], 1) + " x " + item_name(globalarray_0[2]));
		send_message(tostring_localized(globalarray_1[3], 1) + " x " + item_name(globalarray_0[3]));
		send_message(tostring_localized(globalarray_1[4], 1) + " x " + item_name(globalarray_0[4]));
		break;
	case 6:
		send_message(item_name(arg1) + ":");
		send_message(tostring_localized(globalarray_1[0], 1) + " x " + item_name(globalarray_0[0]));
		send_message(tostring_localized(globalarray_1[1], 1) + " x " + item_name(globalarray_0[1]));
		send_message(tostring_localized(globalarray_1[2], 1) + " x " + item_name(globalarray_0[2]));
		send_message(tostring_localized(globalarray_1[3], 1) + " x " + item_name(globalarray_0[3]));
		send_message(tostring_localized(globalarray_1[4], 1) + " x " + item_name(globalarray_0[4]));
		send_message(tostring_localized(globalarray_1[5], 1) + " x " + item_name(globalarray_0[5]));
		break;
	default:
		send_message(item_name(arg1));
}
return;