//script4540(4540)(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10, int arg11, string arg12)(void)
int ivar12;
int ivar13;
int ivar14;
int ivar15;
int ivar16;
int ivar17;
int ivar18;
int ivar19;
int ivar20;
int ivar21;
int ivar22;
int ivar23;
int ivar24;
int ivar25;
int ivar26;
int ivar27;
int ivar28;
int ivar29;
int stack_dump0;
int stack_dump1;
if_sethide(arg0, 0)
cc_deleteall(arg0)
if (arg4 == -1 || arg5 == -1) {
	stack_dump0 = 5631;
	arg5 = 5631;
	arg4 = stack_dump0;
}
if (arg6 == -1) 
	arg6 = 16777215;
ivar12 = min(paramwidth(arg3, arg4, arg12), arg3);
ivar13 = calc(calc(arg7 * max(paramheight(ivar12, arg4, arg12), 1)) + arg8);
ivar14 = calc(ivar12 + 12);
ivar15 = calc(ivar13 + 12);
switch (arg9) {
	case 1:
	case 3:
		ivar14 = calc(ivar14 + 23);
		break;
	case 0:
		ivar15 = calc(ivar15 + 22);
		break;
	case 2:
		ivar15 = calc(ivar15 + 23);
}
stack_dump0 = max(ivar14, 45);
ivar15 = max(ivar15, 45);
ivar14 = stack_dump0;
if_setsize(ivar14, ivar15, 0, 0, arg0)
cc_create(arg0, 3, if_getnextsubid(arg0));
switch (arg9) {
	case 3:
		cc_setsize(25, 2, 1, 1);
		cc_setposition(1, 0, 0, 1);
		break;
	case 1:
		cc_setsize(25, 2, 1, 1);
		cc_setposition(1, 0, 2, 1);
		break;
	case 0:
		cc_setsize(2, 24, 1, 1);
		cc_setposition(0, 1, 1, 0);
		break;
	case 2:
		cc_setsize(2, 25, 1, 1);
		cc_setposition(0, 1, 1, 2);
		break;
	default:
		cc_setsize(2, 2, 1, 1);
		cc_setposition(0, 0, 1, 1);
}
cc_setcolor(0);
cc_setfill(true);
cc_create(arg0, 5, if_getnextsubid(arg0));
switch (arg9) {
	case 3:
		cc_setsize(27, 10, 1, 0);
		cc_setposition(2, 0, 0, 0);
		break;
	case 1:
		cc_setsize(27, 10, 1, 0);
		cc_setposition(2, 0, 2, 0);
		break;
	default:
		cc_setsize(4, 10, 1, 0);
		cc_setposition(0, 0, 1, 0);
		break;
	case 2:
		cc_setsize(4, 10, 1, 0);
		cc_setposition(0, 23, 1, 0);
}
cc_setgraphic(4649)
cc_settiling(true);
cc_create(arg0, 5, if_getnextsubid(arg0));
switch (arg9) {
	case 3:
		cc_setsize(27, 10, 1, 0);
		cc_setposition(2, 0, 0, 2);
		break;
	case 1:
		cc_setsize(27, 10, 1, 0);
		cc_setposition(2, 0, 2, 2);
		break;
	case 0:
		cc_setsize(4, 10, 1, 0);
		cc_setposition(0, 22, 1, 2);
		break;
	default:
		cc_setsize(4, 10, 1, 0);
		cc_setposition(0, 0, 1, 2);
}
cc_setgraphic(4649)
cc_settiling(true);
cc_setvflip(1);
cc_create(arg0, 5, if_getnextsubid(arg0));
switch (arg9) {
	default:
		cc_setsize(10, 4, 0, 1);
		cc_setposition(0, 0, 0, 1);
		break;
	case 1:
		cc_setsize(10, 4, 0, 1);
		cc_setposition(23, 0, 0, 1);
		break;
	case 0:
		cc_setsize(10, 26, 0, 1);
		cc_setposition(0, 2, 0, 0);
		break;
	case 2:
		cc_setsize(10, 27, 0, 1);
		cc_setposition(0, 2, 0, 2);
}
cc_setgraphic(4651)
cc_settiling(true);
cc_sethflip(1)
cc_create(arg0, 5, if_getnextsubid(arg0));
switch (arg9) {
	case 3:
		cc_setsize(10, 4, 0, 1);
		cc_setposition(23, 0, 2, 1);
		break;
	default:
		cc_setsize(10, 4, 0, 1);
		cc_setposition(0, 0, 2, 1);
		break;
	case 0:
		cc_setsize(10, 26, 0, 1);
		cc_setposition(0, 2, 2, 0);
		break;
	case 2:
		cc_setsize(10, 27, 0, 1);
		cc_setposition(0, 2, 2, 2);
}
cc_setgraphic(4651)
cc_settiling(true);
cc_create(arg0, 5, if_getnextsubid(arg0));
cc_setsize(10, 10, 0, 0);
switch (arg9) {
	case 1:
		cc_setposition(23, 0, 0, 0);
		break;
	default:
		cc_setposition(0, 0, 0, 0);
		break;
	case 2:
		cc_setposition(0, 23, 0, 0);
}
cc_setgraphic(4650)
cc_sethflip(1)
cc_create(arg0, 5, if_getnextsubid(arg0));
cc_setsize(10, 10, 0, 0);
switch (arg9) {
	case 3:
		cc_setposition(23, 0, 2, 0);
		break;
	default:
		cc_setposition(0, 0, 2, 0);
		break;
	case 2:
		cc_setposition(0, 23, 2, 0);
}
cc_setgraphic(4650)
cc_create(arg0, 5, if_getnextsubid(arg0));
cc_setsize(10, 10, 0, 0);
switch (arg9) {
	case 1:
		cc_setposition(23, 0, 0, 2);
		break;
	case 0:
		cc_setposition(0, 22, 0, 2);
		break;
	default:
		cc_setposition(0, 0, 0, 2);
}
cc_setgraphic(4650)
cc_sethflip(1)
cc_setvflip(1);
cc_create(arg0, 5, if_getnextsubid(arg0));
cc_setsize(10, 10, 0, 0);
switch (arg9) {
	case 3:
		cc_setposition(23, 0, 2, 2);
		break;
	case 0:
		cc_setposition(0, 22, 2, 2);
		break;
	default:
		cc_setposition(0, 0, 2, 2);
}
cc_setgraphic(4650)
cc_setvflip(1);
cc_create(arg0, 4, if_getnextsubid(arg0));
cc_setsize(ivar12, ivar13, 0, 0);
switch (arg9) {
	case 3:
		cc_setposition(6, 0, 0, 1);
		break;
	case 1:
		cc_setposition(6, 0, 2, 1);
		break;
	case 0:
		cc_setposition(0, 6, 1, 0);
		break;
	case 2:
		cc_setposition(0, 6, 1, 2);
		break;
	default:
		cc_setposition(0, 0, 1, 1);
}
cc_setcolor(arg6);
cc_settextfont(arg5);
cc_settextalign(1, 1, arg7);
cc_settext(arg12);
cc_create(arg0, 5, if_getnextsubid(arg0));
cc_setgraphic(5613)
ivar16 = 0;
ivar17 = 0;
ivar18 = 0;
ivar19 = 0;
ivar20 = if_getlayer(arg0);
if (ivar20 != -1) {
	script3365(ivar20);
	script3366(ivar20);
	/* 
		AT PrimitiveInstruction(opcode=168, value=18, type=int)
		java.lang.RuntimeException: Stack underflow
			at com.cryo.cache.loaders.cs2.nodes.CS2Stack.pop(CS2Stack.java:44)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:468)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
			at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
			at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
			at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
			at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
		
	 */
}
if (ivar20 != -1) {
	stack_dump0 = if_getwidth(ivar20);
	ivar19 = if_getheight(ivar20);
	ivar17 = stack_dump0;
}
else {
	stack_dump0 = 765;
	ivar19 = 503;
	ivar17 = stack_dump0;
}
ivar21 = 0;
ivar22 = 0;
ivar23 = 0;
ivar24 = 0;
ivar25 = 0;
ivar26 = 0;
ivar27 = 0;
if (cc_find(arg1, arg2) == 1 || arg2 == -1 && instr6004(arg1) == 1) {
	script1743();
	script1744();
	stack_dump0 = cc_getwidth();
	ivar24 = cc_getheight();
	ivar23 = stack_dump0;
	/* 
		AT PrimitiveInstruction(opcode=168, value=22, type=int)
		java.lang.RuntimeException: Stack underflow
			at com.cryo.cache.loaders.cs2.nodes.CS2Stack.pop(CS2Stack.java:44)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:468)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
			at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
			at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
			at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
			at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
		
	 */
}
if_sethide(arg0, 1)
ivar28 = calc(ivar16 - ivar25);
ivar29 = calc(ivar18 - ivar26);
stack_dump0 = max(0, ivar28);
stack_dump1 = arg0;
/* 
	AT PrimitiveInstruction(opcode=692, value=false, type=boolean)
	com.cryo.utils.cs2.DecompilerException: No documentation for:PrimitiveInstruction(opcode=692, value=false, type=boolean)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:526)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
		at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
		at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
		at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
		at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
	
 */