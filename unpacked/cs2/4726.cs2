//script4726(4726)(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, int arg10)(void)
int ivar11;
int ivar12;
int ivar13;
int ivar14;
int ivar15;
int ivar16;
int ivar17;
int ivar18;
int ivar19;
int ivar20;
int ivar21;
string svar0;
string svar1;
string svar2;
ivar11 = 74907724;
ivar12 = 0;
ivar13 = -1;
svar0 = "";
ivar14 = 0;
globalarray_0 = new struct[enum_getoutputcount(arg0)];
ivar15 = 0;
ivar16 = -1;
ivar17 = 0;
while (ivar17 < enum_getoutputcount(arg0)) {
	globalarray_0[ivar17] = enum(ivar17, arg0, 74, 105);
	ivar17 = calc(ivar17 + 1);
}
ivar17 = 0;
ivar15 = 1;
ivar18 = 0;
ivar19 = 0;
svar1 = "";
svar2 = "";
ivar20 = 0;
ivar21 = 0;
switch (load_varc(1659)) {
	while (1) {
		default:
			if (ivar15 == 1) {
				ivar15 = 0;
				ivar17 = calc(1 - enum_getoutputcount(arg0));
				while (ivar17 > 0) {
					if (struct_param(globalarray_0[ivar17], 1933) > 0) 
						ivar18 = struct_param(globalarray_0[ivar17], 1933);
					else 
						ivar18 = struct_param(globalarray_0[ivar17], 1932);
					if (struct_param(globalarray_0[calc(1 - ivar17)], 1933) > 0) 
						ivar19 = struct_param(globalarray_0[calc(1 - ivar17)], 1933);
					else 
						ivar19 = struct_param(globalarray_0[calc(1 - ivar17)], 1932);
					if (ivar18 < ivar19) {
						ivar15 = 1;
						ivar16 = globalarray_0[calc(1 - ivar17)];
						globalarray_0[calc(1 - ivar17)] = globalarray_0[ivar17];
						globalarray_0[ivar17] = ivar16;
					}
					ivar17 = calc(1 - ivar17);
				}
			}
	}
	flow_17:
		GOTO	flow_65
		while (1) {
			case 1:
				if (ivar15 == 1) {
					ivar15 = 0;
					ivar17 = calc(1 - enum_getoutputcount(arg0));
					while (ivar17 > 0) {
						if (struct_param(globalarray_0[ivar17], 1933) > 0) 
							ivar18 = struct_param(globalarray_0[ivar17], 1933);
						else 
							ivar18 = struct_param(globalarray_0[ivar17], 1932);
						if (struct_param(globalarray_0[calc(1 - ivar17)], 1933) > 0) 
							ivar19 = struct_param(globalarray_0[calc(1 - ivar17)], 1933);
						else 
							ivar19 = struct_param(globalarray_0[calc(1 - ivar17)], 1932);
						if (ivar18 > ivar19) {
							ivar15 = 1;
							ivar16 = globalarray_0[calc(1 - ivar17)];
							globalarray_0[calc(1 - ivar17)] = globalarray_0[ivar17];
							globalarray_0[ivar17] = ivar16;
						}
						ivar17 = calc(1 - ivar17);
					}
				}
		}
	flow_31:
		GOTO	flow_65
		while (1) {
			case 2:
				if (ivar15 == 1) {
					ivar15 = 0;
					ivar17 = calc(1 - enum_getoutputcount(arg0));
					while (ivar17 > 0) {
						if (struct_param(globalarray_0[ivar17], 1937) == 4) {
							if (gender() == 0) {
								ivar20 = enum(globalarray_0[ivar17], 5185, 105, 74);
								svar1 = enum(ivar20, 5186, 115, 105);
							}
							else {
								ivar20 = enum(globalarray_0[ivar17], 5185, 105, 74);
								svar1 = enum(ivar20, 5187, 115, 105);
							}
							if (gender() == 0) {
								ivar20 = enum(globalarray_0[calc(1 - ivar17)], 5185, 105, 74);
								svar2 = enum(ivar20, 5186, 115, 105);
							}
							else {
								ivar20 = enum(globalarray_0[calc(1 - ivar17)], 5185, 105, 74);
								svar2 = enum(ivar20, 5187, 115, 105);
							}
						}
						else {
							svar1 = struct_param(globalarray_0[ivar17], 1930);
							svar2 = struct_param(globalarray_0[calc(1 - ivar17)], 1930);
						}
						if (compare(svar1, svar2) < 0) {
							ivar15 = 1;
							ivar16 = globalarray_0[calc(1 - ivar17)];
							globalarray_0[calc(1 - ivar17)] = globalarray_0[ivar17];
							globalarray_0[ivar17] = ivar16;
						}
						ivar17 = calc(1 - ivar17);
					}
				}
		}
	flow_48:
		GOTO	flow_65
		while (1) {
			case 3:
				if (ivar15 == 1) {
					ivar15 = 0;
					ivar17 = calc(1 - enum_getoutputcount(arg0));
					while (ivar17 > 0) {
						if (struct_param(globalarray_0[ivar17], 1937) == 4) {
							if (gender() == 0) {
								ivar20 = enum(globalarray_0[ivar17], 5185, 105, 74);
								svar1 = enum(ivar20, 5186, 115, 105);
							}
							else {
								ivar20 = enum(globalarray_0[ivar17], 5185, 105, 74);
								svar1 = enum(ivar20, 5187, 115, 105);
							}
							if (gender() == 0) {
								ivar20 = enum(globalarray_0[calc(1 - ivar17)], 5185, 105, 74);
								svar2 = enum(ivar20, 5186, 115, 105);
							}
							else {
								ivar20 = enum(globalarray_0[calc(1 - ivar17)], 5185, 105, 74);
								svar2 = enum(ivar20, 5187, 115, 105);
							}
						}
						else {
							svar1 = struct_param(globalarray_0[ivar17], 1930);
							svar2 = struct_param(globalarray_0[calc(1 - ivar17)], 1930);
						}
						if (compare(svar1, svar2) > 0) {
							ivar15 = 1;
							ivar16 = globalarray_0[calc(1 - ivar17)];
							globalarray_0[calc(1 - ivar17)] = globalarray_0[ivar17];
							globalarray_0[ivar17] = ivar16;
						}
						ivar17 = calc(1 - ivar17);
					}
				}
		}
}
flow_65:
	ivar17 = 0;
	if (ivar17 < enum_getoutputcount(arg0)) {
		ivar13 = globalarray_0[ivar17];
		script5351(ivar13, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
		/* 
			AT PrimitiveInstruction(opcode=168, value=6, type=int)
			java.lang.RuntimeException: Stack underflow
				at com.cryo.cache.loaders.cs2.nodes.CS2Stack.pop(CS2Stack.java:44)
				at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:468)
				at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
				at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
				at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
				at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
				at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
				at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
			
		 */
	}
	/* 
		AT PrimitiveInstruction(opcode=184, value=0, type=int)
		java.lang.RuntimeException: can't merge: diff stack sizes/types, -5, 0, 0, true
			at com.cryo.cache.loaders.cs2.CS2Type.merge(CS2Type.java:526)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:446)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
			at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
			at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
			at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
			at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
		
	 */