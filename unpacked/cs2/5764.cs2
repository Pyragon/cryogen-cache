//script5764(5764)(int arg0, int arg1, int arg2)(void)
int ivar3;
int ivar4;
int ivar5;
int ivar6;
int ivar7;
int ivar8;
int ivar9;
int ivar10;
int ivar11;
int ivar12;
int ivar13;
int ivar14;
int ivar15;
int stack_dump0;
ivar3 = -1;
ivar4 = -1;
ivar5 = -1;
ivar6 = -1;
ivar7 = -1;
ivar8 = -1;
ivar9 = -1;
ivar10 = -1;
if (arg2 == -1) 
	arg2 = 0;
ivar11 = enum(arg2, arg1, 74, 105);
ivar9 = enum(ivar11, 5483, 74, 74);
if (ivar9 != -1) 
	ivar11 = ivar9;
ivar12 = struct_param(ivar11, 2232);
ivar13 = calc(1 - enum_getoutputcount(arg1));
ivar14 = 0;
if (ivar13 >= 0 && ivar14 == 0) {
	ivar8 = enum(ivar13, arg1, 74, 105);
	ivar9 = enum(ivar8, 5483, 74, 74);
	if (ivar9 != -1) 
		ivar8 = ivar9;
	script3227(struct_param(ivar8, 1268));
	/* 
		AT JumpInstruction(target=LabelInstruction(labelId=9))
		java.lang.RuntimeException: Stack underflow
			at com.cryo.cache.loaders.cs2.nodes.CS2Stack.pop(CS2Stack.java:44)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:182)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
			at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
			at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
			at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
			at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
			at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
		
	 */
}
ivar15 = -1;
switch (ivar12) {
	case 4:
		if (ivar3 < arg2 && ivar3 > -1) 
			ivar15 = ivar3;
		else if (ivar4 > -1) 
			ivar15 = ivar4;
		else if (ivar5 > -1) 
			ivar15 = ivar5;
		else if (ivar6 > -1) 
			ivar15 = ivar6;
		else if (ivar7 > -1) 
			ivar15 = ivar7;
		else {
			if (ivar3 > -1) 
				ivar15 = ivar3;
		}
		break;
	case 3:
		if (ivar4 < arg2 && ivar4 > -1) 
			ivar15 = ivar4;
		else if (ivar5 > -1) 
			ivar15 = ivar5;
		else if (ivar6 > -1) 
			ivar15 = ivar6;
		else if (ivar7 > -1) 
			ivar15 = ivar7;
		else if (ivar3 > -1) 
			ivar15 = ivar3;
		else {
			if (ivar4 > -1) 
				ivar15 = ivar4;
		}
		break;
	case 2:
		if (ivar5 < arg2 && ivar5 > -1) 
			ivar15 = ivar5;
		else if (ivar6 > -1) 
			ivar15 = ivar6;
		else if (ivar7 > -1) 
			ivar15 = ivar7;
		else if (ivar3 > -1) 
			ivar15 = ivar3;
		else if (ivar4 > -1) 
			ivar15 = ivar4;
		else {
			if (ivar5 > -1) 
				ivar15 = ivar5;
		}
		break;
	case 1:
		if (ivar6 < arg2 && ivar6 > -1) 
			ivar15 = ivar6;
		else if (ivar7 > -1) 
			ivar15 = ivar7;
		else if (ivar3 > -1) 
			ivar15 = ivar3;
		else if (ivar4 > -1) 
			ivar15 = ivar4;
		else if (ivar5 > -1) 
			ivar15 = ivar5;
		else {
			if (ivar6 > -1) 
				ivar15 = ivar6;
		}
		break;
	case 0:
		if (ivar7 < arg2 && ivar7 > -1) 
			ivar15 = ivar7;
		else if (ivar3 > -1) 
			ivar15 = ivar3;
		else if (ivar4 > -1) 
			ivar15 = ivar4;
		else if (ivar5 > -1) 
			ivar15 = ivar5;
		else if (ivar6 > -1) 
			ivar15 = ivar6;
		else {
			if (ivar7 > -1) 
				ivar15 = ivar7;
		}
}
stack_dump0 = ivar15;
/* 
	AT PrimitiveInstruction(opcode=184, value=0, type=int)
	java.lang.RuntimeException: can't merge: diff stack sizes/types, -1, 0, 0, true
		at com.cryo.cache.loaders.cs2.CS2Type.merge(CS2Type.java:526)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processFlowBlock(CS2FlowGenerator.java:433)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.processGeneration(CS2FlowGenerator.java:99)
		at com.cryo.cache.loaders.cs2.flow.CS2FlowGenerator.generate(CS2FlowGenerator.java:82)
		at com.cryo.cache.loaders.cs2.CS2Script.decompile(CS2Script.java:357)
		at com.cryo.cache.loaders.CS2DefinitionDumper.dumpFiles(CS2DefinitionDumper.java:43)
		at com.cryo.cache.CacheBuilder.dumpCache(CacheBuilder.java:72)
		at com.cryo.cache.CacheBuilder.main(CacheBuilder.java:43)
	
 */